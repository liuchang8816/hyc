<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HYC.HTCommunication</name>
    </assembly>
    <members>
        <member name="T:HYC.HTCommunication.SerialPortWrapper.HTCOMMSerialPort">
            <summary>
            串口通信类
            </summary>
        </member>
        <member name="P:HYC.HTCommunication.SerialPortWrapper.HTCOMMSerialPort.IsOpen">
            <summary>
            端口打开状态
            </summary>
        </member>
        <member name="M:HYC.HTCommunication.SerialPortWrapper.HTCOMMSerialPort.Init(HYC.HTCommunication.SerialPortWrapper.HTSerialPortInfo)">
            <summary>
            初始化串口
            </summary>
            <param name="info">串口连接信息</param>
            <returns>串口是否已打开</returns>
        </member>
        <member name="M:HYC.HTCommunication.SerialPortWrapper.HTCOMMSerialPort.Open">
            <summary>
            使用已经传入的参数重新初始化串口
            </summary>
            <returns>串口是否已打开</returns>
        </member>
        <member name="M:HYC.HTCommunication.SerialPortWrapper.HTCOMMSerialPort.Send(System.Byte[])">
            <summary>
            发送数据
            </summary>
            <param name="data">数据</param>
        </member>
        <member name="M:HYC.HTCommunication.SerialPortWrapper.HTCOMMSerialPort.Send(System.String)">
            <summary>
            发送文本信息
            </summary>
            <param name="text">文本</param>
        </member>
        <member name="M:HYC.HTCommunication.SerialPortWrapper.HTCOMMSerialPort.sp_DataReceived(System.Object,System.IO.Ports.SerialDataReceivedEventArgs)">
            <summary>
            接收到数据
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HYC.HTCommunication.SerialPortWrapper.HTCOMMSerialPort.Close">
            <summary>
            关闭串口
            </summary>
            <returns>串口是否已关闭</returns>
        </member>
        <member name="M:HYC.HTCommunication.SerialPortWrapper.HTCOMMSerialPort.Dispose">
            <summary>
            释放串口连接和资源
            </summary>
        </member>
        <member name="E:HYC.HTCommunication.SerialPortWrapper.HTCOMMSerialPort.DataReceived">
            <summary>
            接收到数据
            </summary>
        </member>
        <member name="T:HYC.HTCommunication.SerialPortWrapper.HTSerialPortInfo">
            <summary>
            串口连接参数类，默认8/1/N
            </summary>
        </member>
        <member name="P:HYC.HTCommunication.SerialPortWrapper.HTSerialPortInfo.PortName">
            <summary>
            端口号，例 “COM1”
            </summary>
        </member>
        <member name="P:HYC.HTCommunication.SerialPortWrapper.HTSerialPortInfo.BaudRate">
            <summary>
            波特率，9600,19200,115200等
            </summary>
        </member>
        <member name="P:HYC.HTCommunication.SerialPortWrapper.HTSerialPortInfo.DataBits">
            <summary>
            数据位，8/7/6
            </summary>
        </member>
        <member name="P:HYC.HTCommunication.SerialPortWrapper.HTSerialPortInfo.StopBits">
            <summary>
            停止位，StopBits.One/ StopBits.Two/ StopBits.OnePointFive
            </summary>
        </member>
        <member name="P:HYC.HTCommunication.SerialPortWrapper.HTSerialPortInfo.Parity">
            <summary>
            校验位
            </summary>
        </member>
        <member name="P:HYC.HTCommunication.SerialPortWrapper.HTSerialPortInfo.DtrEnable">
            <summary>
            Data Terminal Ready
            </summary>
        </member>
        <member name="P:HYC.HTCommunication.SerialPortWrapper.HTSerialPortInfo.RtsEnable">
            <summary>
            Request to Transmit
            </summary>
        </member>
        <member name="P:HYC.HTCommunication.SerialPortWrapper.HTSerialPortInfo.Handshake">
            <summary>
            握手协议
            </summary>
        </member>
        <member name="M:HYC.HTCommunication.SerialPortWrapper.HTSerialPortInfo.GetStopBits(System.String)">
            <summary>
            从字符串获取停止位，输入字符串为1/1.5/2或者One/OnePointFive/Two，不区分大小写
            </summary>
            <param name="value">字符</param>
            <returns> StopBits枚举值</returns>
        </member>
        <member name="M:HYC.HTCommunication.SerialPortWrapper.HTSerialPortInfo.GetParity(System.String)">
            <summary>
            从字符串获取校验位
            </summary>
            <param name="value">字符</param>
            <returns> Parity枚举值</returns>
        </member>
        <member name="T:HYC.HTCommunication.SerialPortWrapper.SerialPortEventArgs">
            <summary>
            SerialPort事件参数类
            </summary>
        </member>
        <member name="P:HYC.HTCommunication.SerialPortWrapper.SerialPortEventArgs.PortName">
            <summary>
            引发事件的端口号，包含"COM"字符
            </summary>
        </member>
        <member name="P:HYC.HTCommunication.SerialPortWrapper.SerialPortEventArgs.Datas">
            <summary>
            接收到的数据
            </summary>
        </member>
        <member name="M:HYC.HTCommunication.SerialPortWrapper.SerialPortEventArgs.#ctor(System.String,System.Byte[])">
            <summary>
            构造函数
            </summary>
            <param name="portName">端口号</param>
            <param name="datas">数据</param>
        </member>
        <member name="T:HYC.HTCommunication.SocketWrapper.HTCOMMSocketClient">
            <summary>
            Socket客户端类
            </summary>
        </member>
        <member name="P:HYC.HTCommunication.SocketWrapper.HTCOMMSocketClient.ServerIP">
            <summary>
            服务端IP地址
            </summary>
        </member>
        <member name="P:HYC.HTCommunication.SocketWrapper.HTCOMMSocketClient.ServerPort">
            <summary>
            服务器端口
            </summary>
        </member>
        <member name="P:HYC.HTCommunication.SocketWrapper.HTCOMMSocketClient.Connected">
            <summary>
            Socket连接状态
            </summary>
        </member>
        <member name="M:HYC.HTCommunication.SocketWrapper.HTCOMMSocketClient.Init(System.String,System.Int32)">
            <summary>
            初始化Socket连接
            </summary>
            <param name="ipAddr">IP地址</param>
            <param name="port">端口号</param>
        </member>
        <member name="M:HYC.HTCommunication.SocketWrapper.HTCOMMSocketClient.Connect(System.String,System.Int32)">
            <summary>
            初始化Socket连接
            </summary>
            <param name="ipAddr">IP地址</param>
            <param name="port">端口号</param>
        </member>
        <member name="M:HYC.HTCommunication.SocketWrapper.HTCOMMSocketClient.Connect">
            <summary>
            初始化Socket连接
            </summary>
        </member>
        <member name="M:HYC.HTCommunication.SocketWrapper.HTCOMMSocketClient.Send(System.Byte[])">
            <summary>
            发送数据
            </summary>
            <param name="data">数据</param>
            <returns>发送的字节数</returns>
        </member>
        <member name="M:HYC.HTCommunication.SocketWrapper.HTCOMMSocketClient.SendAsync(System.Byte[])">
            <summary>
            异步发送数据
            </summary>
            <param name="data">数据</param>
            <returns>发送的字节数</returns>
        </member>
        <member name="M:HYC.HTCommunication.SocketWrapper.HTCOMMSocketClient.Disconnect">
            <summary>
            断开连接
            </summary>
        </member>
        <member name="M:HYC.HTCommunication.SocketWrapper.HTCOMMSocketClient.Dispose">
            <summary>
            IDispose成员，断开连接
            </summary>
        </member>
        <member name="E:HYC.HTCommunication.SocketWrapper.HTCOMMSocketClient.ClientConnected">
            <summary>
            连接成功
            </summary>
        </member>
        <member name="E:HYC.HTCommunication.SocketWrapper.HTCOMMSocketClient.ClientDisconnected">
            <summary>
            连接断开
            </summary>
        </member>
        <member name="E:HYC.HTCommunication.SocketWrapper.HTCOMMSocketClient.DataReceived">
            <summary>
            接收到数据
            </summary>
        </member>
        <member name="T:HYC.HTCommunication.SocketWrapper.HTCOMMSocketServer">
            <summary>
            Socket服务端类
            </summary>
        </member>
        <member name="M:HYC.HTCommunication.SocketWrapper.HTCOMMSocketServer.Listen(System.Int32,System.String)">
            <summary>
            初始化SocketServer，监听port，默认监听本机所有IP，可指定监听的IP地址
            </summary>
            <param name="port">端口号</param>
            <param name="ip">IP地址</param>
        </member>
        <member name="M:HYC.HTCommunication.SocketWrapper.HTCOMMSocketServer.GetConnections">
            <summary>
            获取所有Socket连接
            </summary>
            <returns>所有Socket连接</returns>
        </member>
        <member name="M:HYC.HTCommunication.SocketWrapper.HTCOMMSocketServer.GetConnections(System.String)">
            <summary>
            获取来自remoteIP的所有Socket连接
            </summary>
            <param name="remoteIP"></param>
            <returns>来自remoteIP的所有Socket连接</returns>
        </member>
        <member name="M:HYC.HTCommunication.SocketWrapper.HTCOMMSocketServer.GetConnection(System.String,System.Int32)">
            <summary>
            获取指定的IP和Port的Socket连接
            </summary>
            <param name="remoteIP">远程IP</param>
            <param name="remotePort">远程端口</param>
            <returns>Socket连接</returns>
        </member>
        <member name="M:HYC.HTCommunication.SocketWrapper.HTCOMMSocketServer.GetConnection(System.Net.EndPoint)">
            <summary>
            获取指定的EndPoint的Socket连接
            </summary>
            <param name="remoteEndPoint">远程客户端终结点</param>
            <returns>Socket连接</returns>
        </member>
        <member name="M:HYC.HTCommunication.SocketWrapper.HTCOMMSocketServer.Send(System.String,System.Int32,System.Byte[])">
            <summary>
            发送数据
            </summary>
            <param name="remoteIP">远程客户端IP</param>
            <param name="remotePort">远程客户端Port</param>
            <param name="data">数据</param>
            <returns>发送到Socket的字节数</returns>
        </member>
        <member name="M:HYC.HTCommunication.SocketWrapper.HTCOMMSocketServer.Send(System.Net.EndPoint,System.Byte[])">
            <summary>
            发送数据
            </summary>
            <param name="ep">远程客户端终结点</param>
            <param name="data">数据</param>
            <returns>发送到Socket的字节数</returns>
        </member>
        <member name="M:HYC.HTCommunication.SocketWrapper.HTCOMMSocketServer.Dispose">
            <summary>
            断开连接，释放资源
            </summary>
        </member>
        <member name="E:HYC.HTCommunication.SocketWrapper.HTCOMMSocketServer.ClientConnected">
            <summary>
            客户端连接成功
            </summary>
        </member>
        <member name="E:HYC.HTCommunication.SocketWrapper.HTCOMMSocketServer.ClientDisconnected">
            <summary>
            客户端连接断开
            </summary>
        </member>
        <member name="E:HYC.HTCommunication.SocketWrapper.HTCOMMSocketServer.DataReceived">
            <summary>
            接收到数据
            </summary>
        </member>
        <member name="T:HYC.HTCommunication.SocketWrapper.HTSocketInfo">
            <summary>
            Socket连接参数类
            </summary>
        </member>
        <member name="P:HYC.HTCommunication.SocketWrapper.HTSocketInfo.IP">
            <summary>
            IP地址
            </summary>
        </member>
        <member name="P:HYC.HTCommunication.SocketWrapper.HTSocketInfo.Port">
            <summary>
            端口号
            </summary>
        </member>
        <member name="T:HYC.HTCommunication.SocketWrapper.HTSocketConnection">
            <summary>
            与本地监听服务相关的Socket连接类
            </summary>
        </member>
        <member name="P:HYC.HTCommunication.SocketWrapper.HTSocketConnection.RemoteIP">
            <summary>
            远程客户端的IP地址
            </summary>
        </member>
        <member name="P:HYC.HTCommunication.SocketWrapper.HTSocketConnection.RemotePort">
            <summary>
            远程客户端的端口
            </summary>
        </member>
        <member name="M:HYC.HTCommunication.SocketWrapper.HTSocketConnection.#ctor(System.Net.Sockets.Socket)">
            <summary>
            构造函数
            </summary>
            <param name="socket">已建立连接的Socket</param>
        </member>
        <member name="M:HYC.HTCommunication.SocketWrapper.HTSocketConnection.Send(System.Byte[])">
            <summary>
            发送数据
            </summary>
            <param name="data">数据</param>
            <returns>发送到Socket的字节数</returns>
        </member>
        <member name="M:HYC.HTCommunication.SocketWrapper.HTSocketConnection.SendAsync(System.Byte[])">
            <summary>
            异步发送数据
            </summary>
            <param name="data">数据</param>
            <returns>发送到Socket的字节数</returns>
        </member>
        <member name="M:HYC.HTCommunication.SocketWrapper.HTSocketConnection.Dispose">
            <summary>
            断开连接，释放资源
            </summary>
        </member>
        <member name="T:HYC.HTCommunication.SocketWrapper.SocketEventArgs">
            <summary>
            Socket事件参数
            </summary>
        </member>
        <member name="P:HYC.HTCommunication.SocketWrapper.SocketEventArgs.Socket">
            <summary>
            引发事件的Socket对象
            </summary>
        </member>
        <member name="P:HYC.HTCommunication.SocketWrapper.SocketEventArgs.LocalIP">
            <summary>
            Socket本地IP地址
            </summary>
        </member>
        <member name="P:HYC.HTCommunication.SocketWrapper.SocketEventArgs.LocalPort">
            <summary>
            Socket本地端口
            </summary>
        </member>
        <member name="P:HYC.HTCommunication.SocketWrapper.SocketEventArgs.RemoteIP">
            <summary>
            Socket远程主机IP地址
            </summary>
        </member>
        <member name="P:HYC.HTCommunication.SocketWrapper.SocketEventArgs.RemotePort">
            <summary>
            Socket远程主机端口
            </summary>
        </member>
        <member name="P:HYC.HTCommunication.SocketWrapper.SocketEventArgs.Datas">
            <summary>
            接收到的数据，在Connected事件和Disconnected事件引发时为null
            </summary>
        </member>
        <member name="M:HYC.HTCommunication.SocketWrapper.SocketEventArgs.#ctor(System.Net.Sockets.Socket,System.Byte[])">
            <summary>
            构造函数
            </summary>
            <param name="socket">引发事件的Socket对象</param>
            <param name="datas">数据</param>
        </member>
    </members>
</doc>
